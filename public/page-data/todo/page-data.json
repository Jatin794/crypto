{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/todo",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Todo\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Add links and details in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/SingleChainSwaps\",\n    \"title\": \"SingleChainSwaps\"\n  }, \"[[SingleChainSwaps]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Add more stuff in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Research\",\n    \"title\": \"Research\"\n  }, \"[[Research]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Add more details in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Exchanges\",\n    \"title\": \"Exchanges\"\n  }, \"[[Exchanges]]\"), \" that helps in deciding. For now you may use the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Research\",\n    \"title\": \"Research\"\n  }, \"[[Research]]\"), \" links for that.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Repurpose the upper right button from a rickroll to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tip\",\n    \"title\": \"Tip\"\n  }, \"[[Tip]]\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#todo","title":"Todo"}]},"outboundReferences":[{"contextLine":"- [ ] Add links and details in [[SingleChainSwaps]]","targetAnchor":null,"refWord":"SingleChainSwaps","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Single-Chain Swaps\"), mdx(\"p\", null, \"PancakeSwap\"), mdx(\"p\", null, \"Uniswap\"), mdx(\"p\", null, \"SushiSwap\"), mdx(\"p\", null, \"QuickSwap\"), mdx(\"p\", null, \"HoneySwap\"), mdx(\"p\", null, \"StellarTerm\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"d421e492-5cf4-529b-9d0e-1fcec7a8c564","fields":{"slug":"/Buy & Exchanges/SingleChainSwaps","title":"Single-Chain Swaps"}}}},{"contextLine":"- [ ] Add more stuff in [[Research]]","targetAnchor":null,"refWord":"Research","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"As I always say, do your own research. But what does that even mean? Here's some links to get you started.\"), mdx(\"p\", null, \"Note: This section is incomplete. Might as well use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Social\",\n    \"title\": \"Social\"\n  }, \"[[Social]]\"), \" in addition to this as it stands.\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Telegram\",\n    \"title\": \"Telegram\"\n  }, \"[[Telegram]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"889ff3d4-69ec-5940-8e37-185fa476c61f","fields":{"slug":"/Research","title":"Research"}}}},{"contextLine":"- [ ] Add more details in [[Exchanges]] that helps in deciding. For now you may use the [[Research]] links for that.","targetAnchor":null,"refWord":"Exchanges","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"So you have some money (or crypto) and now you want to frivoslously play around with it. Very well, look no further. Here I list exchanges sorted by their country of origin in no particular order; in the linked page you can see some recommended details.\"), mdx(\"p\", null, \"Update: Added recommended coins to use for withdrawal, especially if you, like me, use multiple exchanges and prefer low fees in transferring between them. Or if you want a not-expensive crypto exit strategy.\"), mdx(\"p\", null, \"Update 2: Added brief reliability reviews for the exchanges I've used often enough. Seems it should be helpful in deciding for when you want to choose just a few exchanges.\"), mdx(\"p\", null, \"India:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/CoinDCX\",\n    \"title\": \"CoinDCX\"\n  }, \"[[CoinDCX]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/WazirX\",\n    \"title\": \"WazirX\"\n  }, \"[[WazirX]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/BuyUCoin\",\n    \"title\": \"BuyUCoin\"\n  }, \"[[BuyUCoin]]\"), \"\"), mdx(\"p\", null, \"Singapore:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Binance\",\n    \"title\": \"Binance\"\n  }, \"[[Binance]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Kucoin\",\n    \"title\": \"Kucoin\"\n  }, \"[[Kucoin]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Bybit\",\n    \"title\": \"Bybit\"\n  }, \"[[Bybit]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Phemex\",\n    \"title\": \"Phemex\"\n  }, \"[[Phemex]]\"), \"\"), mdx(\"p\", null, \"China:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Bitfinex\",\n    \"title\": \"Bitfinex\"\n  }, \"[[Bitfinex]]\"), \" (HK)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Gate\",\n    \"title\": \"Gate\"\n  }, \"[[Gate]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/MEXC\",\n    \"title\": \"MEXC\"\n  }, \"[[MEXC]]\"), \"\"), mdx(\"p\", null, \"Seychelles:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Huobi\",\n    \"title\": \"Huobi\"\n  }, \"[[Huobi]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/OKEx\",\n    \"title\": \"OKEx\"\n  }, \"[[OKEx]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/PrimeXBT\",\n    \"title\": \"PrimeXBT\"\n  }, \"[[PrimeXBT]]\"), \" (Parent company is in Saint Vincent and the Grenadines)\"), mdx(\"p\", null, \"United Kingdom:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Stormgain\",\n    \"title\": \"Stormgain\"\n  }, \"[[Stormgain]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Latoken\",\n    \"title\": \"Latoken\"\n  }, \"[[Latoken]]\"), \"\"), mdx(\"p\", null, \"DEXs:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/FixedFloat\",\n    \"title\": \"FixedFloat\"\n  }, \"[[FixedFloat]]\"), \"\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/SingleChainSwaps\",\n    \"title\": \"SingleChainSwaps\"\n  }, \"[[SingleChainSwaps]]\"), \"\"), mdx(\"p\", null, \"Other:\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Coinbase\",\n    \"title\": \"Coinbase\"\n  }, \"[[Coinbase]]\"), \" (United States of America)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Crex24\",\n    \"title\": \"Crex24\"\n  }, \"[[Crex24]]\"), \" (Estonia)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Bitcoin.com\",\n    \"title\": \"Bitcoin.com\"\n  }, \"[[Bitcoin.com]]\"), \" (St. Kitts and Nevis)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/FTX\",\n    \"title\": \"FTX\"\n  }, \"[[FTX]]\"), \" (Antigua and Barbuda)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Morpher\",\n    \"title\": \"Morpher\"\n  }, \"[[Morpher]]\"), \" (Austria)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Bithumb\",\n    \"title\": \"Bithumb\"\n  }, \"[[Bithumb]]\"), \" (Korea)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/LocalBitcoins\",\n    \"title\": \"LocalBitcoins\"\n  }, \"[[LocalBitcoins]]\"), \" (Finland)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Changelly\",\n    \"title\": \"Changelly\"\n  }, \"[[Changelly]]\"), \" (Malta)\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/DemoExchanges\",\n    \"title\": \"DemoExchanges\"\n  }, \"[[DemoExchanges]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"6d1b46ea-93d2-508d-a59c-baac582124e5","fields":{"slug":"/Exchanges","title":"Exchanges"}}}},{"contextLine":"- [ ] Add more details in [[Exchanges]] that helps in deciding. For now you may use the [[Research]] links for that.","targetAnchor":null,"refWord":"Research","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"As I always say, do your own research. But what does that even mean? Here's some links to get you started.\"), mdx(\"p\", null, \"Note: This section is incomplete. Might as well use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Social\",\n    \"title\": \"Social\"\n  }, \"[[Social]]\"), \" in addition to this as it stands.\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Telegram\",\n    \"title\": \"Telegram\"\n  }, \"[[Telegram]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"889ff3d4-69ec-5940-8e37-185fa476c61f","fields":{"slug":"/Research","title":"Research"}}}},{"contextLine":"- [ ] Repurpose the upper right button from a rickroll to [[Tip]].","targetAnchor":null,"refWord":"Tip","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Buy Me A Beer\"), mdx(\"p\", null, \"You're a nice person, eh? That's great. You can use your crypto coins in multiple ways, one of those being to give your favourite creators that sweet boost of dopamine.\"), mdx(\"p\", null, \"If that includes me, one easy way is to do it directly using a coin that's cheap to transfer (I'd recommend Litecoin or Bitcoin Cash) using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://commerce.coinbase.com/checkout/1d651c8e-7a25-4850-a78c-e0e2f40e100c\"\n  }, \"this link\"), \" or this button (they're the same):\"), mdx(\"div\", null, \" \", mdx(\"a\", {\n    className: \"donate-with-crypto\",\n    href: \"https://commerce.coinbase.com/checkout/1d651c8e-7a25-4850-a78c-e0e2f40e100c\"\n  }, \" Donate with Crypto \"), \" \", mdx(\"script\", {\n    src: \"https://commerce.coinbase.com/v1/checkout.js?version=201807\"\n  }, \" \"), \" \"), mdx(\"p\", null, \"Might add more, but for now, drop me a message if you prefer a coin which isn't in that list (Cardano, Stellar, Neo, Harmony, Tron, BNB etc), and we'll figure something. You can contact me using the form \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tripetto.app/run/VG94PPD89G\"\n  }, \"here\"), \" (preferred) or via Jabber/XMPP at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"shinsengumi@404.city\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"a6067bdd-db65-5f45-8163-9a57643444ad","fields":{"slug":"/Tip","title":"Buy Me A Beer"}}}}],"inboundReferences":[]},"fields":{"slug":"/todo","title":"Todo"}}},"pageContext":{"id":"6ae018a4-77e5-5918-b0bf-53e8b71c35ed","wikiLinkLabelTemplate":"[[{{ title }}]]","refWordMdxSlugDict":{"SingleChainSwaps":"Buy-and-Exchanges/SingleChainSwaps","Research":"Research","Social":"Social","Noise.cash":"News-and-Social/Noise.cash","PeakD":"News-and-Social/PeakD","HiveOnboard":"Misc-Crypto-Projects/HiveOnboard","Publish0x":"News-and-Social/Publish0x","Read":"News-and-Social/Read","SteemIt":"News-and-Social/SteemIt","Telegram":"Research/Telegram","Exchanges":"Exchanges","CoinDCX":"Buy-and-Exchanges/CoinDCX","WazirX":"Buy-and-Exchanges/WazirX","BuyUCoin":"Buy-and-Exchanges/BuyUCoin","Binance":"Buy-and-Exchanges/Binance","Kucoin":"Buy-and-Exchanges/Kucoin","Bybit":"Buy-and-Exchanges/Bybit","Phemex":"Buy-and-Exchanges/Phemex","Bitfinex":"Buy-and-Exchanges/Bitfinex","Gate":"Buy-and-Exchanges/Gate","MEXC":"Buy-and-Exchanges/MEXC","Huobi":"Buy-and-Exchanges/Huobi","OKEx":"Buy-and-Exchanges/OKEx","PrimeXBT":"Buy-and-Exchanges/PrimeXBT","Stormgain":"Buy-and-Exchanges/Stormgain","DemoExchanges":"Buy-and-Exchanges/DemoExchanges","Latoken":"Buy-and-Exchanges/Latoken","Faucets":"Faucets","FreeBitcoin":"Faucets/FreeBitcoin","Horizen":"Faucets/Horizen","MinePi":"Faucets/MinePi","PreSearch":"Faucets/PreSearch","FixedFloat":"Buy-and-Exchanges/FixedFloat","Coinbase":"Buy-and-Exchanges/Coinbase","Crex24":"Buy-and-Exchanges/Crex24","Games":"Games","Betfury":"Games-and-Gambling/Betfury","PipeFlare":"Games-and-Gambling/PipeFlare","Rollercoin":"Games-and-Gambling/Rollercoin","UplandMe":"Games-and-Gambling/UplandMe","Womplay":"Games-and-Gambling/Womplay","Bitcoin.com":"Buy-and-Exchanges/Bitcoin.com","FTX":"Buy-and-Exchanges/FTX","Morpher":"Buy-and-Exchanges/Morpher","Bithumb":"Buy-and-Exchanges/Bithumb","LocalBitcoins":"Buy-and-Exchanges/LocalBitcoins","Changelly":"Buy-and-Exchanges/Changelly","Tip":"Tip"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}